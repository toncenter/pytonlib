name: Build package

on: [push, pull_request]

jobs:
  set_version:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Test version
        uses: paulhatch/semantic-version@v4.0.2
        id: versioning
        with:
          tag_prefix: "v"
          major_pattern: "[MAJOR]"
          minor_pattern: "[MINOR]"
          format: "${major}.${minor}.${patch}a${increment}"
          bump_each_commit: false
      - name: Create tag
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ steps.versioning.outputs.version_tag }}`,
              sha: context.sha
            })
    outputs:
      version: ${{ steps.versioning.outputs.version }}
      version_tag: ${{ steps.versioning.outputs.version_tag }}
  build_test_wheel:
    runs-on: "ubuntu-latest"
    needs: [set_version]
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install build dependencies
        run: |
          python -m pip install build wheel
      - name: Build distributions
        shell: bash -l {0}
        run: PYTONLIB_VERSION=${{ needs.set_version.outputs.version }} python setup.py sdist bdist_wheel
      - name: Check distributions
        shell: bash -l {0}
        run: | 
          echo $(pwd)
          ls $(pwd)/
      - name: Run tests
        shell: bash -l {0}
        run: |
          PYTHONPATH=./ pytest --asyncio-mode=strict tests/
      - name: Publish package to test PyPI
        if: ${{ github.repository == 'toncenter/pytonlib' && github.event_name == 'push' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_PASSWORD }}
          repository_url: https://test.pypi.org/legacy/

  build_release_wheel:
    runs-on: "ubuntu-latest"
    if: ${{ github.repository == 'toncenter/pytonlib' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [set_version]
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install build dependencies
        run: |
          python -m pip install build wheel
      - name: Build distributions
        shell: bash -l {0}
        run: PYTONLIB_VERSION=${{ needs.set_version.outputs.version_tag }} python setup.py sdist bdist_wheel
      - name: Check distributions
        shell: bash -l {0}
        run: | 
          echo $(pwd)
          ls $(pwd)/
      - name: Run tests
        shell: bash -l {0}
        run: |
          PYTHONPATH=./ pytest --asyncio-mode=strict tests/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          repository_url: https://upload.pypi.org/legacy/
      - name: Create release tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ needs.set_version.outputs.version_tag }}`,
              sha: context.sha
            })
